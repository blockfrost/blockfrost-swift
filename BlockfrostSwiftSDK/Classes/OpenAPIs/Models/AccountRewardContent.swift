//
// AccountRewardContent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class AccountRewardContent: Codable, Hashable {
    /** Epoch of the associated reward */
    public var epoch: Int
    /** Rewards for given epoch in Lovelaces */
    public var amount: String
    /** Bech32 pool ID being delegated to */
    public var poolId: String

    public init(epoch: Int, amount: String, poolId: String) {
        self.epoch = epoch
        self.amount = amount
        self.poolId = poolId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case epoch
        case amount
        case poolId = "pool_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(epoch, forKey: .epoch)
        try container.encode(amount, forKey: .amount)
        try container.encode(poolId, forKey: .poolId)
    }

    public static func == (lhs: AccountRewardContent, rhs: AccountRewardContent) -> Bool {
        lhs.epoch == rhs.epoch &&
            lhs.amount == rhs.amount &&
            lhs.poolId == rhs.poolId
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(epoch.hashValue)
        hasher.combine(amount.hashValue)
        hasher.combine(poolId.hashValue)
    }
}
