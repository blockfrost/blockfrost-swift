//
// AssetHistory.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class AssetHistory: Codable, Hashable {
    public enum Action: String, Codable, CaseIterable {
        case minted
        case burned
    }

    /** Hash of the transaction containing the asset action */
    public var txHash: String
    /** Action executed upon the asset policy */
    public var action: Action
    /** Asset amount of the specific action */
    public var amount: String

    public init(txHash: String, action: Action, amount: String) {
        self.txHash = txHash
        self.action = action
        self.amount = amount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case txHash = "tx_hash"
        case action
        case amount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(txHash, forKey: .txHash)
        try container.encode(action, forKey: .action)
        try container.encode(amount, forKey: .amount)
    }

    public static func == (lhs: AssetHistory, rhs: AssetHistory) -> Bool {
        lhs.txHash == rhs.txHash &&
            lhs.action == rhs.action &&
            lhs.amount == rhs.amount
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(txHash.hashValue)
        hasher.combine(action.hashValue)
        hasher.combine(amount.hashValue)
    }
}
