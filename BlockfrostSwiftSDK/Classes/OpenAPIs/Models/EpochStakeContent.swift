//
// EpochStakeContent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class EpochStakeContent: Codable, Hashable {
    /** Stake address */
    public var stakeAddress: String
    /** Bech32 prefix of the pool delegated to */
    public var poolId: String
    /** Amount of active delegated stake in Lovelaces */
    public var amount: String

    public init(stakeAddress: String, poolId: String, amount: String) {
        self.stakeAddress = stakeAddress
        self.poolId = poolId
        self.amount = amount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case stakeAddress = "stake_address"
        case poolId = "pool_id"
        case amount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(stakeAddress, forKey: .stakeAddress)
        try container.encode(poolId, forKey: .poolId)
        try container.encode(amount, forKey: .amount)
    }

    public static func == (lhs: EpochStakeContent, rhs: EpochStakeContent) -> Bool {
        lhs.stakeAddress == rhs.stakeAddress &&
            lhs.poolId == rhs.poolId &&
            lhs.amount == rhs.amount
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(stakeAddress.hashValue)
        hasher.combine(poolId.hashValue)
        hasher.combine(amount.hashValue)
    }
}
