//
// Network.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class Network: Codable, Hashable {
    public var supply: NetworkSupply
    public var stake: NetworkStake

    public init(supply: NetworkSupply, stake: NetworkStake) {
        self.supply = supply
        self.stake = stake
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case supply
        case stake
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(supply, forKey: .supply)
        try container.encode(stake, forKey: .stake)
    }

    public static func == (lhs: Network, rhs: Network) -> Bool {
        lhs.supply == rhs.supply &&
            lhs.stake == rhs.stake
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(supply.hashValue)
        hasher.combine(stake.hashValue)
    }
}
