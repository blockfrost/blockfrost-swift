//
// NetworkStake.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class NetworkStake: Codable, Hashable {
    /** Current live stake in Lovelaces */
    public var live: String
    /** Current active stake in Lovelaces */
    public var active: String

    public init(live: String, active: String) {
        self.live = live
        self.active = active
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case live
        case active
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(live, forKey: .live)
        try container.encode(active, forKey: .active)
    }

    public static func == (lhs: NetworkStake, rhs: NetworkStake) -> Bool {
        lhs.live == rhs.live &&
            lhs.active == rhs.active
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(live.hashValue)
        hasher.combine(active.hashValue)
    }
}
