//
// PoolDelegator.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class PoolDelegator: Codable, Hashable {
    /** Bech32 encoded stake addresses */
    public var address: String
    /** Currently delegated amount */
    public var liveStake: String

    public init(address: String, liveStake: String) {
        self.address = address
        self.liveStake = liveStake
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case liveStake = "live_stake"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(address, forKey: .address)
        try container.encode(liveStake, forKey: .liveStake)
    }

    public static func == (lhs: PoolDelegator, rhs: PoolDelegator) -> Bool {
        lhs.address == rhs.address &&
            lhs.liveStake == rhs.liveStake
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(address.hashValue)
        hasher.combine(liveStake.hashValue)
    }
}
