//
// TxContentPoolRetir.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public final class TxContentPoolRetir: Codable, Hashable {
    /** Index of the certificate within the transaction */
    public var certIndex: Int
    /** Bech32 stake pool ID */
    public var poolId: String
    /** Retiring epoch */
    public var retiringEpoch: Int

    public init(certIndex: Int, poolId: String, retiringEpoch: Int) {
        self.certIndex = certIndex
        self.poolId = poolId
        self.retiringEpoch = retiringEpoch
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case certIndex = "cert_index"
        case poolId = "pool_id"
        case retiringEpoch = "retiring_epoch"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(certIndex, forKey: .certIndex)
        try container.encode(poolId, forKey: .poolId)
        try container.encode(retiringEpoch, forKey: .retiringEpoch)
    }

    public static func == (lhs: TxContentPoolRetir, rhs: TxContentPoolRetir) -> Bool {
        lhs.certIndex == rhs.certIndex &&
            lhs.poolId == rhs.poolId &&
            lhs.retiringEpoch == rhs.retiringEpoch
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(certIndex.hashValue)
        hasher.combine(poolId.hashValue)
        hasher.combine(retiringEpoch.hashValue)
    }
}
